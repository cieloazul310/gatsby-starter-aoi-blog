{"version":3,"sources":["webpack:///./src/pages/categories.tsx","webpack:///./src/components/Jumbotron.tsx","webpack:///../gatsby-theme-aoi/src/layouts/JumbotronLayout/index.tsx","webpack:///../gatsby-theme-aoi/src/components/ListItemLink.tsx"],"names":["CategoriesPage","group","allMdx","title","jumbotron","sort","a","b","totalCount","map","d","i","key","primaryText","fieldValue","secondaryText","to","divider","useStyles","makeStyles","theme","createStyles","jumbotronBg","bgImg","height","backgroundImage","backgroundColor","palette","type","secondary","light","background","paper","backgroundPosition","backgroundSize","filter","transform","jumbotronText","color","position","display","flexDirection","justifyContent","zIndex","padding","spacing","jumbotronTitle","fontWeight","Jumbotron","header","subtitle","image","classes","overflow","className","variant","JumbotronLayout","disableGutters","children","maxWidth","props","disablePaddingTop","py","ListItemLink","useMediaQuery","breakpoints","down","component","GatsbyLink","button","primary"],"mappings":"0LAiCeA,UAzBf,WACE,IAUQC,EAVK,OAUUC,OAAfD,MACR,OACE,gBAAC,IAAD,CAAQE,MAAM,aAAaC,UAAW,gBAAC,IAAD,CAAWD,MAAM,gBACrD,gBAAC,IAAD,KACGF,EACEI,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,WAAaF,EAAEE,cAChCC,KAAI,SAACC,EAAGC,GAAJ,OACH,gBAAC,IAAD,CAAcC,IAAKD,EAAGE,YAAaH,EAAEI,WAAYC,cAAkBL,EAAEF,WAAP,QAA0BQ,GAAG,IAAIC,SAAO,W,oCC1BlH,gEAKMC,EAAYC,aAAqC,SAACC,GAAD,OACrDC,YAAa,CACXC,YAAa,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CAC3BC,OAAQ,OACRC,gBAAiBF,EAAQ,OAAOA,EAAV,IAAqB,KAC3CG,gBAAiBH,EAAQ,KAA8B,SAAvBH,EAAMO,QAAQC,KAAkBR,EAAMO,QAAQE,UAAUC,MAAQV,EAAMO,QAAQI,WAAWC,MACzHC,mBAAoB,SACpBC,eAAgB,QAChBC,OAAQZ,EAAQ,4BAA8B,KAC9Ca,UAAWb,EAAQ,aAAe,OAGpCc,cAAe,CACbb,OAAQ,IACRc,MAAO,QACPC,SAAU,WACVH,UAAW,sBACXI,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,OAAQ,EACRC,QAASxB,EAAMyB,QAAQ,IAEzBC,eAAgB,CACdC,WAAY,aA6BHC,IAjBf,YAA8D,IAAzC7C,EAAyC,EAAzCA,MAAO8C,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,MACtCC,EAAUlC,EAAU,CAAEK,MAAO4B,GAAS,OAE5C,OACE,gBAAC,IAAD,CAAK3B,OAAQ,IAAK6B,SAAS,UACzB,gBAAC,IAAD,CAAKC,UAAWF,EAAQ9B,cACxB,gBAAC,IAAD,CAAKgC,UAAWF,EAAQf,eACrBY,EAAS,gBAAC,IAAD,CAAYM,QAAQ,aAAaN,GAAuB,KAClE,gBAAC,IAAD,CAAYM,QAAQ,KAAKD,UAAWF,EAAQN,gBACzC3C,GAEF+C,EAAW,gBAAC,IAAD,CAAYK,QAAQ,aAAaL,GAAyB,S,0KC3C/D,SAASM,EAAT,GAAqG,IAA1EpD,EAA0E,EAA1EA,UAAWqD,EAA+D,EAA/DA,eAAgBC,EAA+C,EAA/CA,SAA+C,IAArCC,gBAAqC,SAAhBC,E,oIAAgB,yDAClH,OACE,gBAAC,IAAD,eAAQD,UAAU,EAAOF,gBAAc,EAACI,mBAAiB,GAAKD,GAC3DxD,EACD,gBAAC,IAAD,CAAWuD,SAAUA,EAAUF,eAAgBA,GAC7C,gBAAC,IAAD,CAAKK,GAAI,GAAIJ,O,gKCsBNK,IApBf,YAA0G,QAAlFzB,aAAkF,MAA1E,UAA0E,EAA/DtB,EAA+D,EAA/DA,GAAIH,EAA2D,EAA3DA,YAAaE,EAA8C,EAA9CA,cAAkB6C,E,oIAA4B,iDAGxG,OAFiBI,aAAc,SAAC5C,GAAD,OAAkBA,EAAM6C,YAAYC,KAAK,SAGtE,gBAAC,IAAD,eAAUC,UAAWC,OAAYpD,GAAIA,EAAIqD,QAAM,GAAKT,GAClD,gBAAC,IAAD,CAAcU,QAASzD,EAAagB,UAAWd,KAGjD,gBAAC,IAAa6C,EACZ,gBAAC,IAAD,CACEU,QACE,gBAAC,IAAD,CAAStD,GAAIA,EAAIsB,MAAOA,GACrBzB,GAGLgB,UAAWd,GAAiB,U","file":"component---src-pages-categories-tsx-d0a99c78d02773150a8b.js","sourcesContent":["import * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport List from '@material-ui/core/List';\nimport Layout from 'gatsby-theme-aoi/src/layouts/JumbotronLayout';\nimport ListItemLink from 'gatsby-theme-aoi/src/components/ListItemLink';\nimport Jumbotron from '../components/Jumbotron';\nimport { CategoriesQuery } from '../../graphql-types';\n\nfunction CategoriesPage() {\n  const data = useStaticQuery<CategoriesQuery>(graphql`\n    query Categories {\n      allMdx {\n        group(field: frontmatter___categories) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `);\n  const { group } = data.allMdx;\n  return (\n    <Layout title=\"Categories\" jumbotron={<Jumbotron title=\"Categories\" />} >\n      <List>\n        {group\n          .sort((a, b) => b.totalCount - a.totalCount)\n          .map((d, i) => (\n            <ListItemLink key={i} primaryText={d.fieldValue} secondaryText={`${d.totalCount}posts`} to=\"#\" divider />\n          ))}\n      </List>\n    </Layout>\n  );\n}\n\nexport default CategoriesPage;\n","import * as React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles<Theme, { bgImg: string }>((theme: Theme) =>\n  createStyles({\n    jumbotronBg: ({ bgImg }) => ({\n      height: '100%',\n      backgroundImage: bgImg ? `url(${bgImg})` : null,\n      backgroundColor: bgImg ? null : theme.palette.type !== 'dark' ? theme.palette.secondary.light : theme.palette.background.paper,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      filter: bgImg ? 'blur(6px) brightness(0.9)' : null,\n      transform: bgImg ? 'scale(1.1)' : null\n      //transition: theme.transitions.create(\"background\")\n    }),\n    jumbotronText: {\n      height: 280,\n      color: 'white',\n      position: 'absolute',\n      transform: 'translate(0, -100%)',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      zIndex: 2,\n      padding: theme.spacing(4)\n    },\n    jumbotronTitle: {\n      fontWeight: 'bold'\n    }\n  })\n);\n\ninterface Props {\n  title: string;\n  header?: string;\n  subtitle?: string;\n  image?: string;\n}\n\nfunction Jumbotron({ title, header, subtitle, image }: Props) {\n  const classes = useStyles({ bgImg: image || null });\n\n  return (\n    <Box height={280} overflow=\"hidden\">\n      <Box className={classes.jumbotronBg} />\n      <Box className={classes.jumbotronText}>\n        {header ? <Typography variant=\"subtitle2\">{header}</Typography> : null}\n        <Typography variant=\"h2\" className={classes.jumbotronTitle}>\n          {title}\n        </Typography>\n        {subtitle ? <Typography variant=\"subtitle1\">{subtitle}</Typography> : null}\n      </Box>\n    </Box>\n  );\n}\n\nexport default Jumbotron;\n","import * as React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Layout, { LayoutProps } from '../../layout';\n\ntype Props = {\n  jumbotron: JSX.Element | JSX.Element[];\n} & LayoutProps;\n\nexport default function JumbotronLayout({ jumbotron, disableGutters, children, maxWidth = false, ...props }: Props) {\n  return (\n    <Layout maxWidth={false} disableGutters disablePaddingTop {...props}>\n      {jumbotron}\n      <Container maxWidth={maxWidth} disableGutters={disableGutters}>\n        <Box py={4}>{children}</Box>\n      </Container>\n    </Layout>\n  );\n}\n","import * as React from 'react';\nimport { Link as GatsbyLink, GatsbyLinkProps } from 'gatsby';\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { LinkProps as MuiLinkProps } from '@material-ui/core/Link';\nimport { Theme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AppLink from './AppLink';\n\ntype ListItemLinkProps<T = {}> = Omit<ListItemProps, 'button' | 'ref'> &\n  Partial<Pick<MuiLinkProps, 'color'>> & {\n    to: string;\n    primaryText: string;\n    secondaryText?: string;\n  } & Omit<GatsbyLinkProps<T>, 'ref'>;\n\nfunction ListItemLink({ color = 'inherit', to, primaryText, secondaryText, ...props }: ListItemLinkProps) {\n  const isMobile = useMediaQuery((theme: Theme) => theme.breakpoints.down('xs'));\n  \n  return isMobile ? (\n    <ListItem component={GatsbyLink} to={to} button {...props}>\n      <ListItemText primary={primaryText} secondary={secondaryText} />\n    </ListItem>\n  ) : (\n    <ListItem {...props}>\n      <ListItemText\n        primary={\n          <AppLink to={to} color={color}>\n            {primaryText}\n          </AppLink>\n        }\n        secondary={secondaryText || null}\n      />\n    </ListItem>\n  );\n}\nexport default ListItemLink;\n"],"sourceRoot":""}