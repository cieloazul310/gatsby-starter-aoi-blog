{"version":3,"sources":["webpack:///./src/components/InlineAuthor.tsx","webpack:///./src/components/Jumbotron.tsx","webpack:///../gatsby-theme-aoi/src/layouts/JumbotronLayout/index.tsx","webpack:///./src/utils/useAllPosts.tsx","webpack:///./src/pages/blog/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","title","marginLeft","spacing","marginRight","InlineAuthor","name","author","classes","className","jumbotronBg","bgImg","height","backgroundImage","backgroundColor","palette","type","secondary","light","background","paper","backgroundPosition","backgroundSize","filter","transform","jumbotronText","color","position","display","flexDirection","justifyContent","zIndex","padding","jumbotronTitle","fontWeight","Jumbotron","frontmatter","date","subtitle","featuredImage","childImageSharp","fluid","src","Box","overflow","Typography","variant","JumbotronLayout","jumbotron","children","maxWidth","props","disableGutters","disablePaddingTop","py","useAllPosts","data","React","allMdx","edges","BlogIndexPage","allPosts","map","node","key","id","component","AppLink","to","fields","slug"],"mappings":"6JAKMA,G,UAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CAC1DC,MAAO,CACLC,WAAYH,EAAMI,QAAQ,GAC1BC,YAAaL,EAAMI,QAAQ,UAmBhBE,MAXf,YAAmD,IAAjBC,EAAiB,EAA3BC,OAAUD,KAC1BE,EAAUX,IAChB,OACE,4BACE,wBAAMY,UAAWD,EAAQP,OAAzB,aACaK,KCdbT,EAAYC,aAAqC,SAACC,GAAD,OACrDC,YAAa,CACXU,YAAa,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CAC3BC,OAAQ,OACRC,gBAAiBF,EAAQ,OAAOA,EAAV,IAAqB,KAC3CG,gBAAiBH,EAAQ,KAA8B,SAAvBZ,EAAMgB,QAAQC,KAAkBjB,EAAMgB,QAAQE,UAAUC,MAAQnB,EAAMgB,QAAQI,WAAWC,MACzHC,mBAAoB,SACpBC,eAAgB,QAChBC,OAAQZ,EAAQ,4BAA8B,KAC9Ca,UAAWb,EAAQ,aAAe,OAGpCc,cAAe,CACbb,OAAQ,IACRc,MAAO,QACPC,SAAU,WACVH,UAAW,sBACXI,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,OAAQ,EACRC,QAASjC,EAAMI,QAAQ,IAEzB8B,eAAgB,CACdC,WAAY,aA4BHC,IAnBf,YAA6F,QAAxEC,YAAenC,EAAyD,EAAzDA,MAAOoC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,SAAU/B,EAAkC,EAAlCA,OAAQgC,EAA0B,EAA1BA,cAC3D/B,EAAUX,EAAU,CAAEc,MAAO4B,EAAgBA,EAAcC,gBAAgBC,MAAMC,IAAM,OAE7F,OACE,gBAACC,EAAA,EAAD,CAAK/B,OAAQ,IAAKgC,SAAS,UACzB,gBAACD,EAAA,EAAD,CAAKlC,UAAWD,EAAQE,cACxB,gBAACiC,EAAA,EAAD,CAAKlC,UAAWD,EAAQiB,eACtB,gBAACoB,EAAA,EAAD,CAAYC,QAAQ,aAClB,4BAAOT,GADT,KACwB9B,EAAS,gBAAC,EAAD,CAAcA,OAAQA,IAAa,MAEpE,gBAACsC,EAAA,EAAD,CAAYC,QAAQ,KAAKrC,UAAWD,EAAQyB,gBACzChC,GAEFqC,EAAW,gBAACO,EAAA,EAAD,CAAYC,QAAQ,aAAaR,GAAyB,S,0KC5C/D,SAASS,EAAT,GAAqF,IAA1DC,EAA0D,EAA1DA,UAAWC,EAA+C,EAA/CA,SAA+C,IAArCC,gBAAqC,SAAhBC,E,oIAAgB,wCAClG,OACE,gBAAC,IAAD,eAAQD,UAAU,EAAOE,gBAAc,EAACC,mBAAiB,GAAKF,GAC3DH,EACD,gBAAC,IAAD,CAAWE,SAAUA,GACnB,gBAAC,IAAD,CAAKI,GAAI,GAAIL,O,+iDCgBNM,MA1Bf,WACE,IAAMC,EAAO,OAsBb,OAAOC,WAAc,kBAAMD,EAAKE,OAAOC,QAAO,KCEjCC,UApBf,WACE,IAAMC,EAAWN,IACjB,OACE,gBAAC,IAAD,CAAQtD,MAAM,OAAO+C,UAAW,gBAACb,EAAA,EAAD,CAAWC,YAAa,CAAEnC,MAAO,YAAasC,cAAe,SAC1FsB,EAASC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACZ,gBAACpB,EAAA,EAAD,CAAKW,GAAI,EAAGU,IAAKD,EAAKE,IACpB,gBAACpB,EAAA,EAAD,CAAYC,QAAQ,aACjBiB,EAAK3B,YAAYC,KADpB,aACmC,8BAAS0B,EAAK3B,YAAY7B,OAAOD,OAEpE,gBAACuC,EAAA,EAAD,CAAYC,QAAQ,KAAKoB,UAAU,MACjC,gBAACC,EAAA,EAAD,CAASzC,MAAM,cAAc0C,GAAIL,EAAKM,OAAOC,MAC1CP,EAAK3B,YAAYnC","file":"component---src-pages-blog-index-tsx-ad93596e2ec222e5d788.js","sourcesContent":["import * as React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nimport { AuthorsJson } from '../../graphql-types';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  title: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n}));\n\ninterface Props {\n  author: AuthorsJson;\n}\n\nfunction InlineAuthor({ author: { name } }: Props) {\n  const classes = useStyles();\n  return (\n    <span>\n      <span className={classes.title}>\n        posted by {name}\n      </span>\n    </span>\n  );\n}\n\nexport default InlineAuthor;\n","import * as React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport InlineAuthor from './InlineAuthor';\nimport { Frontmatter } from '../../graphql-types';\n\nconst useStyles = makeStyles<Theme, { bgImg: string }>((theme: Theme) =>\n  createStyles({\n    jumbotronBg: ({ bgImg }) => ({\n      height: '100%',\n      backgroundImage: bgImg ? `url(${bgImg})` : null,\n      backgroundColor: bgImg ? null : theme.palette.type !== 'dark' ? theme.palette.secondary.light : theme.palette.background.paper,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      filter: bgImg ? 'blur(8px) brightness(0.8)' : null,\n      transform: bgImg ? 'scale(1.1)' : null,\n      //transition: theme.transitions.create(\"background\")\n    }),\n    jumbotronText: {\n      height: 280,\n      color: 'white',\n      position: 'absolute',\n      transform: 'translate(0, -100%)',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      zIndex: 2,\n      padding: theme.spacing(4)\n    },\n    jumbotronTitle: {\n      fontWeight: 'bold'\n    }\n  })\n);\n\ninterface Props {\n  frontmatter: Frontmatter;\n}\n\nfunction Jumbotron({ frontmatter: { title, date, subtitle, author, featuredImage } }: Props) {\n  const classes = useStyles({ bgImg: featuredImage ? featuredImage.childImageSharp.fluid.src : null });\n\n  return (\n    <Box height={280} overflow=\"hidden\">\n      <Box className={classes.jumbotronBg} />\n      <Box className={classes.jumbotronText}>\n        <Typography variant=\"subtitle2\">\n          <time>{date}</time>  {author ? <InlineAuthor author={author} /> : null}\n        </Typography>\n        <Typography variant=\"h2\" className={classes.jumbotronTitle}>\n          {title}\n        </Typography>\n        {subtitle ? <Typography variant=\"subtitle1\">{subtitle}</Typography> : null}\n      </Box>\n    </Box>\n  );\n}\n\nexport default Jumbotron;\n","import * as React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Layout, { LayoutProps } from '../../layout';\n\ntype Props = {\n  jumbotron: JSX.Element | JSX.Element[];\n} & LayoutProps;\n\nexport default function JumbotronLayout({ jumbotron, children, maxWidth = false, ...props }: Props) {\n  return (\n    <Layout maxWidth={false} disableGutters disablePaddingTop {...props}>\n      {jumbotron}\n      <Container maxWidth={maxWidth}>\n        <Box py={4}>{children}</Box>\n      </Container>\n    </Layout>\n  );\n}\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { AllPostsQuery } from '../../graphql-types';\n\nfunction useAllPosts() {\n  const data = useStaticQuery<AllPostsQuery>(graphql`\n    query AllPosts {\n      allMdx(sort: { fields: frontmatter___date, order: DESC }, filter: { fileAbsolutePath: { regex: \"/content/blog/\" } }) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            id\n            frontmatter {\n              title\n              date(formatString: \"YYYY-MM-DD\")\n              categories\n              author {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  return React.useMemo(() => data.allMdx.edges, []);\n}\n\nexport default useAllPosts;\n","import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Layout from 'gatsby-theme-aoi/src/layouts/JumbotronLayout';\nimport AppLink from 'gatsby-theme-aoi/src/components/AppLink';\nimport Jumbotron from '../../components/Jumbotron';\n\nimport useAllPosts from '../../utils/useAllPosts';\n\nfunction BlogIndexPage() {\n  const allPosts = useAllPosts();\n  return (\n    <Layout title=\"Blog\" jumbotron={<Jumbotron frontmatter={{ title: 'All Posts', featuredImage: null }} />}>\n      {allPosts.map(({ node }) => (\n        <Box py={3} key={node.id}>\n          <Typography variant=\"subtitle1\">\n            {node.frontmatter.date}  post by <strong>{node.frontmatter.author.name}</strong>\n          </Typography>\n          <Typography variant=\"h4\" component=\"h3\">\n            <AppLink color=\"textPrimary\" to={node.fields.slug}>\n              {node.frontmatter.title}\n            </AppLink>\n          </Typography>\n        </Box>\n      ))}\n    </Layout>\n  );\n}\n\nexport default BlogIndexPage;\n"],"sourceRoot":""}