{"version":3,"sources":["webpack:///../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","webpack:///./src/pages/author.tsx","webpack:///../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","webpack:///../node_modules/@material-ui/core/esm/internal/svg-icons/createSvgIcon.js","webpack:///../node_modules/@material-ui/core/esm/Avatar/Avatar.js","webpack:///../gatsby-theme-aoi/src/components/ListItemLink.tsx"],"names":["props","ref","classes","className","other","context","ListContext","root","alignItems","alignItemsFlexStart","withStyles","minWidth","flexShrink","marginTop","name","useStyles","makeStyles","theme","createStyles","nested","paddingLeft","spacing","footer","textAlign","AuthorsPage","data","group","allMdx","authors","allAuthorsJson","edges","title","jumbotron","Jumbotron","List","sort","a","b","totalCount","map","author","i","authorJson","node","indexOf","fieldValue","key","ListItem","src","avatar","childImageSharp","fluid","alt","ListItemText","primary","AppLink","to","color","secondary","index","ListItemLink","dense","primaryText","frontmatter","secondaryText","date","fields","slug","divider","path","Component","d","SvgIcon","muiName","childrenProp","children","_props$component","component","imgProps","sizes","srcSet","_props$variant","variant","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","position","display","justifyContent","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","palette","background","backgroundColor","type","grey","circle","rounded","shape","square","objectFit","textIndent","useMediaQuery","breakpoints","down","GatsbyLink","button"],"mappings":"4QAuBI,EAAiB,cAAiB,SAAwBA,EAAOC,GACnE,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAQ,YAAyBJ,EAAO,CAAC,UAAW,cAEpDK,EAAU,aAAiBC,EAAA,GAC/B,OAAO,gBAAoB,MAAO,YAAS,CACzCH,UAAW,YAAKD,EAAQK,KAAMJ,EAAkC,eAAvBE,EAAQG,YAA+BN,EAAQO,qBACxFR,IAAKA,GACJG,OAmBU,SAAAM,EAAA,GA5CK,CAElBH,KAAM,CACJI,SAAU,GACVC,WAAY,GAIdH,oBAAqB,CACnBI,UAAW,IAmCmB,CAChCC,KAAM,qBADO,CAEZ,G,oFCtCGC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,OAAQ,CACNC,YAAaH,EAAMI,QAAQ,IAE7BC,OAAQ,CACNC,UAAW,cA6FFC,UAxFf,WACE,IAAMC,EAAO,OAsCLC,EAAUD,EAAKE,OAAfD,MACFE,EAAUH,EAAKI,eAAeC,MAC9B5B,EAAUa,IAChB,OACE,gBAAC,IAAD,CAAQgB,MAAM,SAASC,UAAW,gBAACC,EAAA,EAAD,CAAWF,MAAM,YACjD,gBAACG,EAAA,EAAD,KACGR,EACES,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,WAAaF,EAAEE,cAChCC,KAAI,SAACC,EAAQC,GACZ,IAAMC,EAAad,EAAQA,EAAQW,KAAI,qBAAGI,KAAgB7B,QAAM8B,QAAQJ,EAAOK,aAAaF,KAC5F,OACE,gBAAC,WAAD,CAAgBG,IAAKL,GACnB,gBAACM,EAAA,EAAD,KACE,gBAAC,EAAD,KACE,gBAAC,IAAD,CAAQC,IAAKN,EAAWO,OAASP,EAAWO,OAAOC,gBAAgBC,MAAMH,IAAM,KAAMI,IAAKZ,EAAOK,YAC7FH,EAAWO,OAA0B,KAAjB,gBAAC,IAAD,QAG1B,gBAACI,EAAA,EAAD,CACEC,QACE,gBAACC,EAAA,EAAD,CAASC,GAAE,WAAahB,EAAOK,WAAcY,MAAM,WAChDjB,EAAOK,YAGZa,UAAclB,EAAOF,WAAZ,WAGb,gBAACJ,EAAA,EAAD,KACGM,EAAOV,MAAMS,KAAI,WAAWoB,GAAX,IAAGhB,EAAH,EAAGA,KAAH,OAChB,gBAACiB,EAAA,EAAD,CACEzD,UAAWD,EAAQiB,OACnB0C,OAAK,EACLf,IAAKa,EACLG,YAAanB,EAAKoB,YAAYhC,MAC9BiC,cAAkBrB,EAAKoB,YAAYE,KAAtB,YAAsCtB,EAAKoB,YAAYvB,OAAO1B,KAC3E0C,GAAIb,EAAKuB,OAAOC,KAChBC,SAAO,OAGX,gBAACR,EAAA,EAAD,CAAczD,UAAWD,EAAQoB,OAAQwC,YAAY,OAAON,GAAE,WAAahB,EAAOK,WAAcY,MAAM,uB,0HClGzG,ICHuBY,EAChCC,EDES,GCHuBD,EDGT,gBAAoB,OAAQ,CACvDE,EAAG,mHCHCD,EAAY,OAAW,cAAiB,SAAUtE,EAAOC,GAC3D,OAAO,gBAAoBuE,EAAA,EAAS,YAAS,GAAIxE,EAAO,CACtDC,IAAKA,IACHoE,QAOII,QAAUD,EAAA,EAAQC,QACrBH,GC6FT,IAAI,EAAS,cAAiB,SAAgBtE,EAAOC,GACnD,IAAImD,EAAMpD,EAAMoD,IACZsB,EAAe1E,EAAM2E,SACrBzE,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClByE,EAAmB5E,EAAM6E,UACzBP,OAAiC,IAArBM,EAA8B,MAAQA,EAClDE,EAAW9E,EAAM8E,SACjBC,EAAQ/E,EAAM+E,MACd/B,EAAMhD,EAAMgD,IACZgC,EAAShF,EAAMgF,OACfC,EAAiBjF,EAAMkF,QACvBA,OAA6B,IAAnBD,EAA4B,SAAWA,EACjD7E,EAAQ,YAAyBJ,EAAO,CAAC,MAAO,WAAY,UAAW,YAAa,YAAa,WAAY,QAAS,MAAO,SAAU,YAEvI2E,EAAW,KAEXQ,EA3DN,SAAmBC,GACjB,IAAIpC,EAAMoC,EAAKpC,IACXgC,EAASI,EAAKJ,OAEdK,EAAkB,YAAe,GACjCF,EAASE,EAAgB,GACzBC,EAAYD,EAAgB,GAiChC,OA/BA,aAAgB,WACd,GAAKrC,GAAQgC,EAAb,CAIAM,GAAU,GACV,IAAIC,GAAS,EACTC,EAAQ,IAAIC,MAoBhB,OAnBAD,EAAMxC,IAAMA,EACZwC,EAAMR,OAASA,EAEfQ,EAAME,OAAS,WACRH,GAILD,EAAU,WAGZE,EAAMG,QAAU,WACTJ,GAILD,EAAU,UAGL,WACLC,GAAS,MAEV,CAACvC,EAAKgC,IACFG,EAoBMS,CAAU,CACrB5C,IAAKA,EACLgC,OAAQA,IAENa,EAAS7C,GAAOgC,EAChBc,EAAmBD,GAAqB,UAAXV,EAoBjC,OAjBER,EADEmB,EACS,gBAAoB,MAAO,YAAS,CAC7C1C,IAAKA,EACLJ,IAAKA,EACLgC,OAAQA,EACRD,MAAOA,EACP5E,UAAWD,EAAQ6F,KAClBjB,IACsB,MAAhBJ,EACEA,EACFmB,GAAUzC,EACRA,EAAI,GAEJ,gBAAoB4C,EAAQ,CACrC7F,UAAWD,EAAQ+F,WAIhB,gBAAoB3B,EAAW,YAAS,CAC7CnE,UAAW,YAAKD,EAAQK,KAAML,EAAQgG,OAAQhG,EAAQgF,GAAU/E,GAAY2F,GAAoB5F,EAAQiG,cACxGlG,IAAKA,GACJG,GAAQuE,MA2DE,WAAAjE,EAAA,IA7MK,SAAgBO,GAClC,MAAO,CAELV,KAAM,CACJ6F,SAAU,WACVC,QAAS,OACT7F,WAAY,SACZ8F,eAAgB,SAChB1F,WAAY,EACZ2F,MAAO,GACPC,OAAQ,GACRC,WAAYxF,EAAMyF,WAAWD,WAC7BE,SAAU1F,EAAMyF,WAAWE,QAAQ,IACnCC,WAAY,EACZC,aAAc,MACdC,SAAU,SACVC,WAAY,QAIdb,aAAc,CACZ1C,MAAOxC,EAAMgG,QAAQC,WAAoB,QACzCC,gBAAwC,UAAvBlG,EAAMgG,QAAQG,KAAmBnG,EAAMgG,QAAQI,KAAK,KAAOpG,EAAMgG,QAAQI,KAAK,MAIjGC,OAAQ,GAGRC,QAAS,CACPT,aAAc7F,EAAMuG,MAAMV,cAI5BW,OAAQ,CACNX,aAAc,GAIhBf,IAAK,CACHQ,MAAO,OACPC,OAAQ,OACRjF,UAAW,SAEXmG,UAAW,QAEXjE,MAAO,cAEPkE,WAAY,KAId1B,SAAU,CACRM,MAAO,MACPC,OAAQ,UAuJoB,CAChC1F,KAAM,aADO,CAEZ,I,gKClLY8C,IApBf,YAA0G,QAAlFH,aAAkF,MAA1E,UAA0E,EAA/DD,EAA+D,EAA/DA,GAAIM,EAA2D,EAA3DA,YAAaE,EAA8C,EAA9CA,cAAkBhE,E,oIAA4B,iDAGxG,OAFiB4H,aAAc,SAAC3G,GAAD,OAAkBA,EAAM4G,YAAYC,KAAK,SAGtE,gBAAC,IAAD,eAAUjD,UAAWkD,OAAYvE,GAAIA,EAAIwE,QAAM,GAAKhI,GAClD,gBAAC,IAAD,CAAcsD,QAASQ,EAAaJ,UAAWM,KAGjD,gBAAC,IAAahE,EACZ,gBAAC,IAAD,CACEsD,QACE,gBAAC,IAAD,CAASE,GAAIA,EAAIC,MAAOA,GACrBK,GAGLJ,UAAWM,GAAiB,U","file":"component---src-pages-author-tsx-7c0914976e65e7787d53.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  /**\n   * The content of the component â€“ normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvater from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avater from '@material-ui/core/Avatar';\nimport Layout from 'gatsby-theme-aoi/src/layouts/JumbotronLayout';\nimport AppLink from 'gatsby-theme-aoi/src/components/AppLink';\nimport ListItemLink from 'gatsby-theme-aoi/src/components/ListItemLink';\nimport Jumbotron from '../components/Jumbotron';\nimport { AuthorIcon } from '../icons';\nimport { AuthorsQuery } from '../../graphql-types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    nested: {\n      paddingLeft: theme.spacing(4)\n    },\n    footer: {\n      textAlign: 'right'\n    }\n  })\n);\n\nfunction AuthorsPage() {\n  const data = useStaticQuery<AuthorsQuery>(graphql`\n    query Authors {\n      allMdx(filter: { fileAbsolutePath: { regex: \"/content/blog/\" } }, sort: { fields: [frontmatter___date], order: DESC }) {\n        group(field: frontmatter___author___name, limit: 5) {\n          fieldValue\n          totalCount\n          edges {\n            node {\n              frontmatter {\n                title\n                date(formatString: \"YYYY-MM-DD\")\n                author {\n                  name\n                }\n              }\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n      allAuthorsJson {\n        edges {\n          node {\n            name\n            avatar {\n              childImageSharp {\n                fluid(maxWidth: 240) {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  const { group } = data.allMdx;\n  const authors = data.allAuthorsJson.edges;\n  const classes = useStyles();\n  return (\n    <Layout title=\"Author\" jumbotron={<Jumbotron title=\"Author\" />}>\n      <List>\n        {group\n          .sort((a, b) => b.totalCount - a.totalCount)\n          .map((author, i) => {\n            const authorJson = authors[authors.map(({ node }) => node.name).indexOf(author.fieldValue)].node;\n            return (\n              <React.Fragment key={i}>\n                <ListItem>\n                  <ListItemAvater>\n                    <Avater src={authorJson.avatar ? authorJson.avatar.childImageSharp.fluid.src : null} alt={author.fieldValue}>\n                      {!authorJson.avatar ? <AuthorIcon /> : null}\n                    </Avater>\n                  </ListItemAvater>\n                  <ListItemText\n                    primary={\n                      <AppLink to={`/author/${author.fieldValue}`} color=\"inherit\">\n                        {author.fieldValue}\n                      </AppLink>\n                    }\n                    secondary={`${author.totalCount}posts`}\n                  />\n                </ListItem>\n                <List>\n                  {author.edges.map(({ node }, index) => (\n                    <ListItemLink\n                      className={classes.nested}\n                      dense\n                      key={index}\n                      primaryText={node.frontmatter.title}\n                      secondaryText={`${node.frontmatter.date} post by ${node.frontmatter.author.name}`}\n                      to={node.fields.slug}\n                      divider\n                    />\n                  ))}\n                  <ListItemLink className={classes.footer} primaryText=\"More\" to={`/author/${author.fieldValue}`} color=\"secondary\" />\n                </List>\n              </React.Fragment>\n            );\n          })}\n      </List>\n    </Layout>\n  );\n}\n\nexport default AuthorsPage;\n","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport SvgIcon from '../../SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({}, props, {\n      ref: ref\n    }), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background[\"default\"],\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import * as React from 'react';\nimport { Link as GatsbyLink, GatsbyLinkProps } from 'gatsby';\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { LinkProps as MuiLinkProps } from '@material-ui/core/Link';\nimport { Theme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AppLink from './AppLink';\n\ntype ListItemLinkProps<T = {}> = Omit<ListItemProps, 'button' | 'ref'> &\n  Partial<Pick<MuiLinkProps, 'color'>> & {\n    to: string;\n    primaryText: string;\n    secondaryText?: string;\n  } & Omit<GatsbyLinkProps<T>, 'ref'>;\n\nfunction ListItemLink({ color = 'inherit', to, primaryText, secondaryText, ...props }: ListItemLinkProps) {\n  const isMobile = useMediaQuery((theme: Theme) => theme.breakpoints.down('xs'));\n  \n  return isMobile ? (\n    <ListItem component={GatsbyLink} to={to} button {...props}>\n      <ListItemText primary={primaryText} secondary={secondaryText} />\n    </ListItem>\n  ) : (\n    <ListItem {...props}>\n      <ListItemText\n        primary={\n          <AppLink to={to} color={color}>\n            {primaryText}\n          </AppLink>\n        }\n        secondary={secondaryText || null}\n      />\n    </ListItem>\n  );\n}\nexport default ListItemLink;\n"],"sourceRoot":""}