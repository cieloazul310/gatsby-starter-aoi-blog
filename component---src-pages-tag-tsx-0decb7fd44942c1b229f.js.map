{"version":3,"sources":["webpack:///./src/pages/tag.tsx","webpack:///./src/components/Jumbotron.tsx","webpack:///../gatsby-theme-aoi/src/layouts/JumbotronLayout/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","tag","marginRight","spacing","TagPage","group","useStaticQuery","allMdx","classes","title","maxWidth","jumbotron","sort","a","b","totalCount","map","index","key","component","className","to","fieldValue","jumbotronBg","bgImg","height","backgroundImage","undefined","backgroundColor","palette","type","secondary","light","background","paper","backgroundPosition","backgroundSize","filter","transform","jumbotronText","color","position","display","flexDirection","justifyContent","zIndex","padding","breakpoints","down","jumbotronTitle","fontWeight","Jumbotron","header","subtitle","image","overflow","variant","JumbotronLayout","disableGutters","children","props","disablePaddingTop","py"],"mappings":"8FAAA,2GASMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,IAAK,CACHC,YAAaH,EAAMI,QAAQ,SA+BlBC,UA1Bf,WACE,IAUQC,EAVKC,yBAAc,cAUJC,OAAfF,MACFG,EAAUX,IAChB,OACE,gBAAC,IAAD,CAAQY,MAAM,MAAMC,SAAS,KAAKC,UAAW,gBAAC,IAAD,CAAWF,MAAM,SAC3DJ,EACEO,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,WAAaF,EAAEE,cAChCC,KAAI,SAACf,EAAKgB,GAAN,OACH,gBAAC,IAAD,CAAYC,IAAKD,EAAOE,UAAU,OAAOC,UAAWZ,EAAQP,KAC1D,gBAAC,IAAD,CAASoB,GAAE,QAAUpB,EAAIqB,YAAzB,IAA4CrB,EAAIqB,mB,oCCpC5D,gEAKMzB,EAAYC,aAAsC,SAACC,GAAD,aACtDC,YAAa,CACXuB,YAAa,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CAC3BC,OAAQ,OACRC,gBAAiBF,EAAQ,OAAOA,EAAV,SAAqBG,EAC3CC,gBAAiBJ,OAAQG,EAAmC,SAAvB5B,EAAM8B,QAAQC,KAAkB/B,EAAM8B,QAAQE,UAAUC,MAAQjC,EAAM8B,QAAQI,WAAWC,MAC9HC,mBAAoB,SACpBC,eAAgB,QAChBC,OAAQb,EAAQ,iCAA8BG,EAC9CW,UAAWd,EAAQ,kBAAeG,IAEpCY,eAAa,GACXd,OAAQ,IACRe,MAAO,QACPC,SAAU,WACVH,UAAW,sBACXI,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,OAAQ,EACRC,QAAS/C,EAAMI,QAAQ,EAAG,IATf,EAUVJ,EAAMgD,YAAYC,KAAK,OAAQ,CAC9BF,QAAS/C,EAAMI,QAAQ,IAXd,GAcb8C,eAAgB,CACdC,WAAY,aA6BHC,IAjBf,YAA8D,IAAzC1C,EAAyC,EAAzCA,MAAO2C,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,MACtC9C,EAAUX,EAAU,CAAE2B,MAAO8B,eAAS3B,IAE5C,OACE,gBAAC,IAAD,CAAKF,OAAQ,IAAK8B,SAAS,UACzB,gBAAC,IAAD,CAAKnC,UAAWZ,EAAQe,cACxB,gBAAC,IAAD,CAAKH,UAAWZ,EAAQ+B,eACrBa,EAAS,gBAAC,IAAD,CAAYI,QAAQ,aAAaJ,GAAuB,KAClE,gBAAC,IAAD,CAAYI,QAAQ,KAAKpC,UAAWZ,EAAQyC,gBACzCxC,GAEF4C,EAAW,gBAAC,IAAD,CAAYG,QAAQ,aAAaH,GAAyB,S,oIC7C/D,SAASI,EAAT,GAAqG,IAA1E9C,EAA0E,EAA1EA,UAAW+C,EAA+D,EAA/DA,eAAgBC,EAA+C,EAA/CA,SAA+C,IAArCjD,gBAAqC,SAAhBkD,EAAgB,oEAClH,OACE,gBAAC,IAAD,eAAQlD,UAAU,EAAOgD,gBAAc,EAACG,mBAAiB,GAAKD,GAC3DjD,EACD,gBAAC,IAAD,CAAWD,SAAUA,EAAUgD,eAAgBA,GAC7C,gBAAC,IAAD,CAAKI,GAAI,GAAIH","file":"component---src-pages-tag-tsx-0decb7fd44942c1b229f.js","sourcesContent":["import * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Layout from 'gatsby-theme-aoi/src/layouts/JumbotronLayout';\nimport AppLink from 'gatsby-theme-aoi/src/components/AppLink';\nimport Jumbotron from '../components/Jumbotron';\nimport { AllTagQuery } from '../../graphql-types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    tag: {\n      marginRight: theme.spacing(1),\n    },\n  })\n);\n\nfunction TagPage() {\n  const data = useStaticQuery<AllTagQuery>(graphql`\n    query AllTag {\n      allMdx(filter: { fileAbsolutePath: { regex: \"/content/blog/\" } }, sort: { fields: [frontmatter___date], order: DESC }) {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `);\n  const { group } = data.allMdx;\n  const classes = useStyles();\n  return (\n    <Layout title=\"Tag\" maxWidth=\"md\" jumbotron={<Jumbotron title=\"Tag\" />}>\n      {group\n        .sort((a, b) => b.totalCount - a.totalCount)\n        .map((tag, index) => (\n          <Typography key={index} component=\"span\" className={classes.tag}>\n            <AppLink to={`/tag/${tag.fieldValue}`}>{`#${tag.fieldValue}`}</AppLink>\n          </Typography>\n        ))}\n    </Layout>\n  );\n}\n\nexport default TagPage;\n","import * as React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles<Theme, { bgImg?: string }>((theme: Theme) =>\n  createStyles({\n    jumbotronBg: ({ bgImg }) => ({\n      height: '100%',\n      backgroundImage: bgImg ? `url(${bgImg})` : undefined,\n      backgroundColor: bgImg ? undefined : theme.palette.type !== 'dark' ? theme.palette.secondary.light : theme.palette.background.paper,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      filter: bgImg ? 'blur(6px) brightness(0.9)' : undefined,\n      transform: bgImg ? 'scale(1.1)' : undefined,\n    }),\n    jumbotronText: {\n      height: 280,\n      color: 'white',\n      position: 'absolute',\n      transform: 'translate(0, -100%)',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      zIndex: 2,\n      padding: theme.spacing(2, 4),\n      [theme.breakpoints.down('sm')]: {\n        padding: theme.spacing(2),\n      },\n    },\n    jumbotronTitle: {\n      fontWeight: 'bold',\n    },\n  })\n);\n\ninterface Props {\n  title: string | JSX.Element | JSX.Element[] | (string | JSX.Element | JSX.Element[])[];\n  header?: string | JSX.Element | JSX.Element[] | (string | JSX.Element | JSX.Element[])[];\n  subtitle?: string | JSX.Element | JSX.Element[] | (string | JSX.Element | JSX.Element[])[];\n  image?: string;\n}\n\nfunction Jumbotron({ title, header, subtitle, image }: Props) {\n  const classes = useStyles({ bgImg: image ?? undefined });\n\n  return (\n    <Box height={280} overflow=\"hidden\">\n      <Box className={classes.jumbotronBg} />\n      <Box className={classes.jumbotronText}>\n        {header ? <Typography variant=\"subtitle2\">{header}</Typography> : null}\n        <Typography variant=\"h2\" className={classes.jumbotronTitle}>\n          {title}\n        </Typography>\n        {subtitle ? <Typography variant=\"subtitle1\">{subtitle}</Typography> : null}\n      </Box>\n    </Box>\n  );\n}\n\nexport default Jumbotron;\n","import * as React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Layout, { LayoutProps } from '../../layout';\n\ntype Props = {\n  jumbotron: JSX.Element | JSX.Element[];\n} & LayoutProps;\n\nexport default function JumbotronLayout({ jumbotron, disableGutters, children, maxWidth = false, ...props }: Props) {\n  return (\n    <Layout maxWidth={false} disableGutters disablePaddingTop {...props}>\n      {jumbotron}\n      <Container maxWidth={maxWidth} disableGutters={disableGutters}>\n        <Box py={4}>{children}</Box>\n      </Container>\n    </Layout>\n  );\n}\n"],"sourceRoot":""}